// <auto-generated />
using System;
using B.API.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace B.API.Migrations
{
    [DbContext(typeof(QuanLyCafeDBContext))]
    partial class QuanLyCafeDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("B.API.Enitities.Customer", b =>
                {
                    b.Property<int>("IdCustomer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCustomer"));

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MemberShipRankIdRank")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Point")
                        .HasColumnType("int");

                    b.Property<int?>("RankId")
                        .HasColumnType("int");

                    b.Property<string>("SDT")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCustomer");

                    b.HasIndex("MemberShipRankIdRank");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("B.API.Enitities.DichVuPhatSinh", b =>
                {
                    b.Property<int>("IdDichVu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDichVu"));

                    b.Property<string>("ChiTiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HoaDonIDHoaDon")
                        .HasColumnType("int");

                    b.Property<float?>("SoTien")
                        .HasColumnType("real");

                    b.HasKey("IdDichVu");

                    b.HasIndex("HoaDonIDHoaDon");

                    b.ToTable("dichVuPhatSinhs");
                });

            modelBuilder.Entity("B.API.Enitities.HoaDon", b =>
                {
                    b.Property<int>("IDHoaDon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDHoaDon"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("IdNhanVien")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBan")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherIdVoucher")
                        .HasColumnType("int");

                    b.HasKey("IDHoaDon");

                    b.HasIndex("CustomerId");

                    b.HasIndex("IdNhanVien");

                    b.HasIndex("VoucherIdVoucher");

                    b.ToTable("hoaDons");
                });

            modelBuilder.Entity("B.API.Enitities.HoaDonChiTiet", b =>
                {
                    b.Property<int>("IDHoaDonChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDHoaDonChiTiet"));

                    b.Property<float?>("GiaBan")
                        .HasColumnType("real");

                    b.Property<int?>("HoaDonIDHoaDon")
                        .HasColumnType("int");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<int>("IdSanPham")
                        .HasColumnType("int");

                    b.Property<int>("IdVoucher")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayXuatDon")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.Property<float?>("TongGiaTriHoaDon")
                        .HasColumnType("real");

                    b.HasKey("IDHoaDonChiTiet");

                    b.HasIndex("HoaDonIDHoaDon");

                    b.HasIndex("IdCustomer");

                    b.HasIndex("IdVoucher");

                    b.ToTable("hoaDonChiTiets");
                });

            modelBuilder.Entity("B.API.Enitities.LoaiSanPham", b =>
                {
                    b.Property<int>("IdLoaiSanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLoaiSanPham"));

                    b.Property<string>("TenLoaiSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("IdLoaiSanPham");

                    b.ToTable("loaiSanPhams");
                });

            modelBuilder.Entity("B.API.Enitities.MemberShipRank", b =>
                {
                    b.Property<int>("IdRank")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRank"));

                    b.Property<float?>("Discount")
                        .HasColumnType("real");

                    b.Property<int?>("PointsNeed")
                        .HasColumnType("int");

                    b.Property<string>("RankName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRank");

                    b.ToTable("memberShipRanks");
                });

            modelBuilder.Entity("B.API.Enitities.NguyenLieu", b =>
                {
                    b.Property<int>("IdNguyeLieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNguyeLieu"));

                    b.Property<float?>("Gia")
                        .HasColumnType("real");

                    b.Property<DateTime?>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenNguyenLieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNguyeLieu");

                    b.ToTable("nguyenLieus");
                });

            modelBuilder.Entity("B.API.Enitities.NhanVien", b =>
                {
                    b.Property<int>("IdNhanVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNhanVien"));

                    b.Property<int?>("Active")
                        .HasColumnType("int");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNhanVien");

                    b.ToTable("nhanViens");
                });

            modelBuilder.Entity("B.API.Enitities.PhaChe", b =>
                {
                    b.Property<int>("IdPhaChe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPhaChe"));

                    b.Property<string>("CongThuc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdNguyenLieu")
                        .HasColumnType("int");

                    b.Property<int>("IdSanPham")
                        .HasColumnType("int");

                    b.HasKey("IdPhaChe");

                    b.HasIndex("IdNguyenLieu");

                    b.HasIndex("IdSanPham");

                    b.ToTable("phaChes");
                });

            modelBuilder.Entity("B.API.Enitities.Sale", b =>
                {
                    b.Property<int>("IdSale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSale"));

                    b.Property<int>("IdSanPham")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<float?>("PhanTram")
                        .HasColumnType("real");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("IdSale");

                    b.HasIndex("IdSanPham");

                    b.ToTable("sales");
                });

            modelBuilder.Entity("B.API.Enitities.SanPham", b =>
                {
                    b.Property<int>("IdSanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSanPham"));

                    b.Property<float?>("Gia")
                        .HasColumnType("real");

                    b.Property<int?>("LoaiSanPhamIdLoaiSanPham")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Thue")
                        .HasColumnType("real");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdSanPham");

                    b.HasIndex("LoaiSanPhamIdLoaiSanPham");

                    b.ToTable("sanPhams");
                });

            modelBuilder.Entity("B.API.Enitities.Voucher", b =>
                {
                    b.Property<int>("IdVoucher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVoucher"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("DieuKienApDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("GiamTien")
                        .HasColumnType("real");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("IdVoucher");

                    b.ToTable("vouchers");
                });

            modelBuilder.Entity("HoaDonChiTietSanPham", b =>
                {
                    b.Property<int>("HoaDonChiTietsIDHoaDonChiTiet")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamIdSanPham")
                        .HasColumnType("int");

                    b.HasKey("HoaDonChiTietsIDHoaDonChiTiet", "SanPhamIdSanPham");

                    b.HasIndex("SanPhamIdSanPham");

                    b.ToTable("HoaDonChiTietSanPham");
                });

            modelBuilder.Entity("B.API.Enitities.Customer", b =>
                {
                    b.HasOne("B.API.Enitities.MemberShipRank", "MemberShipRank")
                        .WithMany("Customers")
                        .HasForeignKey("MemberShipRankIdRank");

                    b.Navigation("MemberShipRank");
                });

            modelBuilder.Entity("B.API.Enitities.DichVuPhatSinh", b =>
                {
                    b.HasOne("B.API.Enitities.HoaDon", "HoaDon")
                        .WithMany("DichVuPhatSinhs")
                        .HasForeignKey("HoaDonIDHoaDon");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("B.API.Enitities.HoaDon", b =>
                {
                    b.HasOne("B.API.Enitities.Customer", "Customer")
                        .WithMany("HoaDon")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("B.API.Enitities.NhanVien", "NhanVien")
                        .WithMany("HoaDons")
                        .HasForeignKey("IdNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("B.API.Enitities.Voucher", "Voucher")
                        .WithMany("HoaDons")
                        .HasForeignKey("VoucherIdVoucher");

                    b.Navigation("Customer");

                    b.Navigation("NhanVien");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("B.API.Enitities.HoaDonChiTiet", b =>
                {
                    b.HasOne("B.API.Enitities.HoaDon", "HoaDon")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("HoaDonIDHoaDon");

                    b.HasOne("B.API.Enitities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("IdCustomer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("B.API.Enitities.Voucher", "Voucher")
                        .WithMany()
                        .HasForeignKey("IdVoucher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("HoaDon");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("B.API.Enitities.PhaChe", b =>
                {
                    b.HasOne("B.API.Enitities.NguyenLieu", "NguyenLieu")
                        .WithMany("PhaChes")
                        .HasForeignKey("IdNguyenLieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("B.API.Enitities.SanPham", "SanPham")
                        .WithMany("PhaChes")
                        .HasForeignKey("IdSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguyenLieu");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("B.API.Enitities.Sale", b =>
                {
                    b.HasOne("B.API.Enitities.SanPham", "SanPham")
                        .WithMany("Sales")
                        .HasForeignKey("IdSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("B.API.Enitities.SanPham", b =>
                {
                    b.HasOne("B.API.Enitities.LoaiSanPham", "LoaiSanPham")
                        .WithMany("sanPhams")
                        .HasForeignKey("LoaiSanPhamIdLoaiSanPham");

                    b.Navigation("LoaiSanPham");
                });

            modelBuilder.Entity("HoaDonChiTietSanPham", b =>
                {
                    b.HasOne("B.API.Enitities.HoaDonChiTiet", null)
                        .WithMany()
                        .HasForeignKey("HoaDonChiTietsIDHoaDonChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("B.API.Enitities.SanPham", null)
                        .WithMany()
                        .HasForeignKey("SanPhamIdSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("B.API.Enitities.Customer", b =>
                {
                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("B.API.Enitities.HoaDon", b =>
                {
                    b.Navigation("DichVuPhatSinhs");

                    b.Navigation("HoaDonChiTiets");
                });

            modelBuilder.Entity("B.API.Enitities.LoaiSanPham", b =>
                {
                    b.Navigation("sanPhams");
                });

            modelBuilder.Entity("B.API.Enitities.MemberShipRank", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("B.API.Enitities.NguyenLieu", b =>
                {
                    b.Navigation("PhaChes");
                });

            modelBuilder.Entity("B.API.Enitities.NhanVien", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("B.API.Enitities.SanPham", b =>
                {
                    b.Navigation("PhaChes");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("B.API.Enitities.Voucher", b =>
                {
                    b.Navigation("HoaDons");
                });
#pragma warning restore 612, 618
        }
    }
}
